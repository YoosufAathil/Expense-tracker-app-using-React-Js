{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FUJITSU\\\\OneDrive\\\\Desktop\\\\Expense Tracker\\\\frontend\\\\my-app\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(` ${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(incomes => {\n      totalIncome = totalIncome + incomes.amount;\n    });\n    return totalIncome;\n  };\n  console.log(totalIncome());\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      totalIncome\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","_ref","_s","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","deleteIncome","id","res","delete","totalIncome","forEach","amount","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/FUJITSU/OneDrive/Desktop/Expense Tracker/frontend/my-app/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n            })\r\n            getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(` ${BASE_URL}get-incomes`)\r\n        setIncomes(response.data)\r\n        console.log(response.data)\r\n    }\r\n    \r\n    const deleteIncome = async (id) => {\r\n        const res = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((incomes) => {\r\n            totalIncome = totalIncome + incomes.amount \r\n        })\r\n        return totalIncome;\r\n    }\r\n    \r\n    console.log(totalIncome());\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            totalIncome\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,aAAa,gBAAGP,KAAK,CAACQ,aAAa,EAAE;AAE3C,OAAO,MAAMC,cAAc,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAErC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,SAAS,GAAG,MAAOC,MAAM,IAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAE,GAAEhB,QAAS,YAAW,EAAEc,MAAM,CAAC,CAC7DG,KAAK,CAAEC,GAAG,IAAK;MACZN,QAAQ,CAACM,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,CAAC;IACFC,UAAU,EAAE;EACpB,CAAC;EAED,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMN,QAAQ,GAAG,MAAMlB,KAAK,CAACyB,GAAG,CAAE,IAAGtB,QAAS,aAAY,CAAC;IAC3DQ,UAAU,CAACO,QAAQ,CAACI,IAAI,CAAC;IACzBI,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACI,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,MAAM,CAAE,GAAE5B,QAAS,iBAAgB0B,EAAG,EAAC,CAAC;IAChEL,UAAU,EAAE;EAChB,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIA,WAAW,GAAG,CAAC;IACnBtB,OAAO,CAACuB,OAAO,CAAEvB,OAAO,IAAK;MACzBsB,WAAW,GAAGA,WAAW,GAAGtB,OAAO,CAACwB,MAAM;IAC9C,CAAC,CAAC;IACF,OAAOF,WAAW;EACtB,CAAC;EAEDN,OAAO,CAACC,GAAG,CAACK,WAAW,EAAE,CAAC;EAC1B,oBACI9B,OAAA,CAACE,aAAa,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAC3BpB,SAAS;MACTQ,UAAU;MACVd,OAAO;MACPkB,YAAY;MACZI;IACJ,CAAE;IAAAvB,QAAA,EACGA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAEjC,CAAC;AAAAhC,EAAA,CA7CYF,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AA+C3B,OAAO,MAAMoC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,OAAO7C,UAAU,CAACM,aAAa,CAAC;AACpC,CAAC;AAAAuC,GAAA,CAFYD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}